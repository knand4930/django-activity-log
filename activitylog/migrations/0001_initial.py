# Generated by Django 5.0.4 on 2024-05-04 16:10

import activitylog.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CorsEvent',
            fields=[
                ('id', models.UUIDField(default=activitylog.models.default_uuid, editable=False, primary_key=True, serialize=False, unique=True)),
                ('url', models.CharField(blank=True, db_index=True, max_length=254, null=True, verbose_name='URL')),
                ('method', models.CharField(db_index=True, max_length=20, null=True, verbose_name='Method')),
                ('query_string', models.TextField(null=True, verbose_name='Query string')),
                ('browser', models.TextField(blank=True, null=True, verbose_name='Browser fields')),
                ('platform', models.TextField(blank=True, null=True, verbose_name='Platform fields')),
                ('operating_system', models.TextField(blank=True, null=True, verbose_name='Operating System fields')),
                ('latitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='latitude fields')),
                ('longitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='longitude fields')),
                ('city', models.CharField(blank=True, max_length=500, null=True, verbose_name='city fields')),
                ('country', models.CharField(blank=True, max_length=500, null=True, verbose_name='country fields')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date time')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'cors event',
                'verbose_name_plural': 'cors events',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='LoginEvent',
            fields=[
                ('id', models.UUIDField(default=activitylog.models.default_uuid, editable=False, primary_key=True, serialize=False, unique=True)),
                ('login_type', models.SmallIntegerField(choices=[(0, 'Login'), (1, 'Logout'), (2, 'Failed login')], verbose_name='Event type')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Username')),
                ('browser', models.TextField(blank=True, null=True, verbose_name='Browser fields')),
                ('platform', models.TextField(blank=True, null=True, verbose_name='Platform fields')),
                ('operating_system', models.TextField(blank=True, null=True, verbose_name='Operating System fields')),
                ('latitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='latitude fields')),
                ('longitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='longitude fields')),
                ('city', models.CharField(blank=True, max_length=500, null=True, verbose_name='city fields')),
                ('country', models.CharField(blank=True, max_length=500, null=True, verbose_name='country fields')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Date time')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'login event',
                'verbose_name_plural': 'login events',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='RequestEvent',
            fields=[
                ('id', models.UUIDField(default=activitylog.models.default_uuid, editable=False, primary_key=True, serialize=False, unique=True)),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('method', models.CharField(db_index=True, max_length=20, verbose_name='Method')),
                ('query_string', models.TextField(blank=True, null=True, verbose_name='Query string')),
                ('browser', models.TextField(blank=True, null=True, verbose_name='Browser fields')),
                ('platform', models.TextField(blank=True, null=True, verbose_name='Platform fields')),
                ('operating_system', models.TextField(blank=True, null=True, verbose_name='Operating System fields')),
                ('latitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='latitude fields')),
                ('longitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='longitude fields')),
                ('city', models.CharField(blank=True, max_length=500, null=True, verbose_name='city fields')),
                ('country', models.CharField(blank=True, max_length=500, null=True, verbose_name='country fields')),
                ('remote_ip', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date time')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'request event',
                'verbose_name_plural': 'request events',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='CRUDEvent',
            fields=[
                ('id', models.UUIDField(default=activitylog.models.default_uuid, editable=False, primary_key=True, serialize=False, unique=True)),
                ('event_type', models.SmallIntegerField(choices=[(1, 'Create'), (2, 'Update'), (3, 'Delete'), (4, 'Many-to-Many Change'), (5, 'Reverse Many-to-Many Change'), (6, 'Many-to-Many Add'), (7, 'Reverse Many-to-Many Add'), (8, 'Many-to-Many Remove'), (9, 'Reverse Many-to-Many Remove'), (10, 'Many-to-Many Clear'), (11, 'Reverse Many-to-Many Clear')], verbose_name='Event type')),
                ('object_id', models.CharField(max_length=255, verbose_name='Object ID')),
                ('object_repr', models.TextField(blank=True, null=True, verbose_name='Object representation')),
                ('object_json_repr', models.TextField(blank=True, null=True, verbose_name='Object JSON representation')),
                ('browser', models.TextField(blank=True, null=True, verbose_name='Browser fields')),
                ('platform', models.TextField(blank=True, null=True, verbose_name='Platform fields')),
                ('operating_system', models.TextField(blank=True, null=True, verbose_name='Operating System fields')),
                ('latitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='latitude fields')),
                ('longitude', models.CharField(blank=True, max_length=500, null=True, verbose_name='longitude fields')),
                ('city', models.CharField(blank=True, max_length=500, null=True, verbose_name='city fields')),
                ('country', models.CharField(blank=True, max_length=500, null=True, verbose_name='country fields')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('changed_fields', models.TextField(blank=True, null=True, verbose_name='Changed fields')),
                ('user_pk_as_string', models.CharField(blank=True, help_text='String version of the user pk', max_length=255, null=True, verbose_name='User PK as string')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Date time')),
                ('content_type', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content type')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'CRUD event',
                'verbose_name_plural': 'CRUD events',
                'ordering': ['-datetime'],
                'index_together': {('object_id', 'content_type')},
            },
        ),
    ]
